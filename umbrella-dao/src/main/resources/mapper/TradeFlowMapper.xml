<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blibee.umbrella.dao.TradeFlowMapper">
  <resultMap id="BaseResultMap" type="com.blibee.umbrella.pojo.TradeFlow">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="trade_number" jdbcType="BIGINT" property="tradeNumber" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="refund_prepay_amount" jdbcType="DECIMAL" property="refundPrepayAmount" />
    <result column="refund_part_amount" jdbcType="DECIMAL" property="refundPartAmount" />
    <result column="refund_part_trade_number" jdbcType="BIGINT" property="refundPartTradeNumber" />
    <result column="refund_part_time" jdbcType="TIMESTAMP" property="refundPartTime" />
    <result column="refund_prepay_trade_number" jdbcType="BIGINT" property="refundPrepayTradeNumber" />
    <result column="refund_prepay_time" jdbcType="TIMESTAMP" property="refundPrepayTime" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="trade_time" jdbcType="TIMESTAMP" property="tradeTime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="lease_number" jdbcType="BIGINT" property="leaseNumber" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trade_number, amount, refund_prepay_amount, refund_part_amount, refund_part_trade_number, 
    refund_part_time, refund_prepay_trade_number, refund_prepay_time, refund_time, trade_time, 
    state, lease_number, uid, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.blibee.umbrella.pojo.TradeFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blibee.umbrella.pojo.TradeFlowExample">
    delete from trade_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blibee.umbrella.pojo.TradeFlow">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trade_flow (trade_number, amount, refund_prepay_amount, 
      refund_part_amount, refund_part_trade_number, 
      refund_part_time, refund_prepay_trade_number, 
      refund_prepay_time, refund_time, trade_time, 
      state, lease_number, uid, 
      create_time, update_time)
    values (#{tradeNumber,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{refundPrepayAmount,jdbcType=DECIMAL}, 
      #{refundPartAmount,jdbcType=DECIMAL}, #{refundPartTradeNumber,jdbcType=BIGINT}, 
      #{refundPartTime,jdbcType=TIMESTAMP}, #{refundPrepayTradeNumber,jdbcType=BIGINT}, 
      #{refundPrepayTime,jdbcType=TIMESTAMP}, #{refundTime,jdbcType=TIMESTAMP}, #{tradeTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=TINYINT}, #{leaseNumber,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.blibee.umbrella.pojo.TradeFlow">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trade_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeNumber != null">
        trade_number,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="refundPrepayAmount != null">
        refund_prepay_amount,
      </if>
      <if test="refundPartAmount != null">
        refund_part_amount,
      </if>
      <if test="refundPartTradeNumber != null">
        refund_part_trade_number,
      </if>
      <if test="refundPartTime != null">
        refund_part_time,
      </if>
      <if test="refundPrepayTradeNumber != null">
        refund_prepay_trade_number,
      </if>
      <if test="refundPrepayTime != null">
        refund_prepay_time,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="tradeTime != null">
        trade_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="leaseNumber != null">
        lease_number,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeNumber != null">
        #{tradeNumber,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="refundPrepayAmount != null">
        #{refundPrepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundPartAmount != null">
        #{refundPartAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundPartTradeNumber != null">
        #{refundPartTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="refundPartTime != null">
        #{refundPartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundPrepayTradeNumber != null">
        #{refundPrepayTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="refundPrepayTime != null">
        #{refundPrepayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeTime != null">
        #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="leaseNumber != null">
        #{leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blibee.umbrella.pojo.TradeFlowExample" resultType="java.lang.Long">
    select count(*) from trade_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade_flow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNumber != null">
        trade_number = #{record.tradeNumber,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundPrepayAmount != null">
        refund_prepay_amount = #{record.refundPrepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundPartAmount != null">
        refund_part_amount = #{record.refundPartAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundPartTradeNumber != null">
        refund_part_trade_number = #{record.refundPartTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="record.refundPartTime != null">
        refund_part_time = #{record.refundPartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundPrepayTradeNumber != null">
        refund_prepay_trade_number = #{record.refundPrepayTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="record.refundPrepayTime != null">
        refund_prepay_time = #{record.refundPrepayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeTime != null">
        trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.leaseNumber != null">
        lease_number = #{record.leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade_flow
    set id = #{record.id,jdbcType=INTEGER},
      trade_number = #{record.tradeNumber,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      refund_prepay_amount = #{record.refundPrepayAmount,jdbcType=DECIMAL},
      refund_part_amount = #{record.refundPartAmount,jdbcType=DECIMAL},
      refund_part_trade_number = #{record.refundPartTradeNumber,jdbcType=BIGINT},
      refund_part_time = #{record.refundPartTime,jdbcType=TIMESTAMP},
      refund_prepay_trade_number = #{record.refundPrepayTradeNumber,jdbcType=BIGINT},
      refund_prepay_time = #{record.refundPrepayTime,jdbcType=TIMESTAMP},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=TINYINT},
      lease_number = #{record.leaseNumber,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blibee.umbrella.pojo.TradeFlow">
    update trade_flow
    <set>
      <if test="tradeNumber != null">
        trade_number = #{tradeNumber,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="refundPrepayAmount != null">
        refund_prepay_amount = #{refundPrepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundPartAmount != null">
        refund_part_amount = #{refundPartAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundPartTradeNumber != null">
        refund_part_trade_number = #{refundPartTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="refundPartTime != null">
        refund_part_time = #{refundPartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundPrepayTradeNumber != null">
        refund_prepay_trade_number = #{refundPrepayTradeNumber,jdbcType=BIGINT},
      </if>
      <if test="refundPrepayTime != null">
        refund_prepay_time = #{refundPrepayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeTime != null">
        trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="leaseNumber != null">
        lease_number = #{leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blibee.umbrella.pojo.TradeFlow">
    update trade_flow
    set trade_number = #{tradeNumber,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      refund_prepay_amount = #{refundPrepayAmount,jdbcType=DECIMAL},
      refund_part_amount = #{refundPartAmount,jdbcType=DECIMAL},
      refund_part_trade_number = #{refundPartTradeNumber,jdbcType=BIGINT},
      refund_part_time = #{refundPartTime,jdbcType=TIMESTAMP},
      refund_prepay_trade_number = #{refundPrepayTradeNumber,jdbcType=BIGINT},
      refund_prepay_time = #{refundPrepayTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      lease_number = #{leaseNumber,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.blibee.umbrella.pojo.TradeFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>