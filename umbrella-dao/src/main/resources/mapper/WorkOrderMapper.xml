<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pro.umbrella.dao.WorkOrderMapper">
  <resultMap id="BaseResultMap" type="com.pro.umbrella.model.pojo.WorkOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="work_id" jdbcType="BIGINT" property="workId" />
    <result column="umbrella_cabinet_number" jdbcType="VARCHAR" property="umbrellaCabinetNumber" />
    <result column="lease_number" jdbcType="BIGINT" property="leaseNumber" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="feedback_use_value" jdbcType="VARCHAR" property="feedbackUseValue" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="execute_user" jdbcType="VARCHAR" property="executeUser" />
    <result column="feedback_desc" jdbcType="VARCHAR" property="feedbackDesc" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="location_name" jdbcType="VARCHAR" property="locationName" />
    <result column="location_position" jdbcType="VARCHAR" property="locationPosition" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="detail_state" jdbcType="TINYINT" property="detailState" />
    <result column="review_time" jdbcType="TIMESTAMP" property="reviewTime" />
    <result column="valid_state" jdbcType="TINYINT" property="validState" />
    <result column="sync_state" jdbcType="TINYINT" property="syncState" />
    <result column="comment_message" jdbcType="VARCHAR" property="commentMessage" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, work_id, umbrella_cabinet_number, lease_number, priority, feedback_use_value, 
    create_user, execute_user, feedback_desc, pic, location_name, location_position, 
    city, state, detail_state, review_time, valid_state, sync_state, comment_message, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pro.umbrella.model.pojo.WorkOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pro.umbrella.model.pojo.WorkOrderExample">
    delete from work_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pro.umbrella.model.pojo.WorkOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work_order (work_id, umbrella_cabinet_number, lease_number, 
      priority, feedback_use_value, create_user, 
      execute_user, feedback_desc, pic, 
      location_name, location_position, city, 
      state, detail_state, review_time, 
      valid_state, sync_state, comment_message, 
      create_time, update_time)
    values (#{workId,jdbcType=BIGINT}, #{umbrellaCabinetNumber,jdbcType=VARCHAR}, #{leaseNumber,jdbcType=BIGINT}, 
      #{priority,jdbcType=INTEGER}, #{feedbackUseValue,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{executeUser,jdbcType=VARCHAR}, #{feedbackDesc,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{locationName,jdbcType=VARCHAR}, #{locationPosition,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{detailState,jdbcType=TINYINT}, #{reviewTime,jdbcType=TIMESTAMP}, 
      #{validState,jdbcType=TINYINT}, #{syncState,jdbcType=TINYINT}, #{commentMessage,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pro.umbrella.model.pojo.WorkOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="umbrellaCabinetNumber != null">
        umbrella_cabinet_number,
      </if>
      <if test="leaseNumber != null">
        lease_number,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="feedbackUseValue != null">
        feedback_use_value,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="executeUser != null">
        execute_user,
      </if>
      <if test="feedbackDesc != null">
        feedback_desc,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="locationName != null">
        location_name,
      </if>
      <if test="locationPosition != null">
        location_position,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="detailState != null">
        detail_state,
      </if>
      <if test="reviewTime != null">
        review_time,
      </if>
      <if test="validState != null">
        valid_state,
      </if>
      <if test="syncState != null">
        sync_state,
      </if>
      <if test="commentMessage != null">
        comment_message,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=BIGINT},
      </if>
      <if test="umbrellaCabinetNumber != null">
        #{umbrellaCabinetNumber,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumber != null">
        #{leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="feedbackUseValue != null">
        #{feedbackUseValue,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="executeUser != null">
        #{executeUser,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDesc != null">
        #{feedbackDesc,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="locationName != null">
        #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="locationPosition != null">
        #{locationPosition,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="detailState != null">
        #{detailState,jdbcType=TINYINT},
      </if>
      <if test="reviewTime != null">
        #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validState != null">
        #{validState,jdbcType=TINYINT},
      </if>
      <if test="syncState != null">
        #{syncState,jdbcType=TINYINT},
      </if>
      <if test="commentMessage != null">
        #{commentMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pro.umbrella.model.pojo.WorkOrderExample" resultType="java.lang.Long">
    select count(*) from work_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=BIGINT},
      </if>
      <if test="record.umbrellaCabinetNumber != null">
        umbrella_cabinet_number = #{record.umbrellaCabinetNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseNumber != null">
        lease_number = #{record.leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.feedbackUseValue != null">
        feedback_use_value = #{record.feedbackUseValue,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.executeUser != null">
        execute_user = #{record.executeUser,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackDesc != null">
        feedback_desc = #{record.feedbackDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.locationName != null">
        location_name = #{record.locationName,jdbcType=VARCHAR},
      </if>
      <if test="record.locationPosition != null">
        location_position = #{record.locationPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.detailState != null">
        detail_state = #{record.detailState,jdbcType=TINYINT},
      </if>
      <if test="record.reviewTime != null">
        review_time = #{record.reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validState != null">
        valid_state = #{record.validState,jdbcType=TINYINT},
      </if>
      <if test="record.syncState != null">
        sync_state = #{record.syncState,jdbcType=TINYINT},
      </if>
      <if test="record.commentMessage != null">
        comment_message = #{record.commentMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work_order
    set id = #{record.id,jdbcType=INTEGER},
      work_id = #{record.workId,jdbcType=BIGINT},
      umbrella_cabinet_number = #{record.umbrellaCabinetNumber,jdbcType=VARCHAR},
      lease_number = #{record.leaseNumber,jdbcType=BIGINT},
      priority = #{record.priority,jdbcType=INTEGER},
      feedback_use_value = #{record.feedbackUseValue,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      execute_user = #{record.executeUser,jdbcType=VARCHAR},
      feedback_desc = #{record.feedbackDesc,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      location_name = #{record.locationName,jdbcType=VARCHAR},
      location_position = #{record.locationPosition,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      detail_state = #{record.detailState,jdbcType=TINYINT},
      review_time = #{record.reviewTime,jdbcType=TIMESTAMP},
      valid_state = #{record.validState,jdbcType=TINYINT},
      sync_state = #{record.syncState,jdbcType=TINYINT},
      comment_message = #{record.commentMessage,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pro.umbrella.model.pojo.WorkOrder">
    update work_order
    <set>
      <if test="workId != null">
        work_id = #{workId,jdbcType=BIGINT},
      </if>
      <if test="umbrellaCabinetNumber != null">
        umbrella_cabinet_number = #{umbrellaCabinetNumber,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumber != null">
        lease_number = #{leaseNumber,jdbcType=BIGINT},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="feedbackUseValue != null">
        feedback_use_value = #{feedbackUseValue,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="executeUser != null">
        execute_user = #{executeUser,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDesc != null">
        feedback_desc = #{feedbackDesc,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="locationName != null">
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="locationPosition != null">
        location_position = #{locationPosition,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="detailState != null">
        detail_state = #{detailState,jdbcType=TINYINT},
      </if>
      <if test="reviewTime != null">
        review_time = #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validState != null">
        valid_state = #{validState,jdbcType=TINYINT},
      </if>
      <if test="syncState != null">
        sync_state = #{syncState,jdbcType=TINYINT},
      </if>
      <if test="commentMessage != null">
        comment_message = #{commentMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pro.umbrella.model.pojo.WorkOrder">
    update work_order
    set work_id = #{workId,jdbcType=BIGINT},
      umbrella_cabinet_number = #{umbrellaCabinetNumber,jdbcType=VARCHAR},
      lease_number = #{leaseNumber,jdbcType=BIGINT},
      priority = #{priority,jdbcType=INTEGER},
      feedback_use_value = #{feedbackUseValue,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      execute_user = #{executeUser,jdbcType=VARCHAR},
      feedback_desc = #{feedbackDesc,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      location_name = #{locationName,jdbcType=VARCHAR},
      location_position = #{locationPosition,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      detail_state = #{detailState,jdbcType=TINYINT},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      valid_state = #{validState,jdbcType=TINYINT},
      sync_state = #{syncState,jdbcType=TINYINT},
      comment_message = #{commentMessage,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.pro.umbrella.model.pojo.WorkOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>